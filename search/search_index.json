{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Teo","text":"<p> A programming language for kids designed to be fast and easy to learn.</p> <p>Teo is an easy-to-learn programming language for children. Because there are so many concepts and commands to master in normal programming language, I believe it is difficult to learn the concept of it. Abstraction is wonderful, but it can be the source of much confusion for newcomers because it demands them to think about the system at a high level. In some circumstances, reducing abstraction can help beginners understand better.</p>"},{"location":"#some-examples","title":"Some examples:","text":"<pre><code>let x 5;\nprint x;\n</code></pre> <pre><code>let x 2;\nassert x &lt; 4 3;\nend;\n</code></pre>"},{"location":"#getting-up-and-running","title":"Getting up and running","text":"<ul> <li>Download lastest CI Artifacts on Github CI</li> <li>or, compile yourself with <code>cmake</code> (Recommended)</li> </ul>"},{"location":"#compiling-with-cmake","title":"Compiling with CMake","text":"<p>Dependencies: - Git - CMake - Make - GNU Compiler Collection (You can use clang by set the environment variable <code>CC=\"clang\"</code> and <code>CXX=\"clang++\"</code></p> <pre><code>git clone https://github.com/teolang/teo --depth=1 --recurse-submodules\ncd teo\nmake release -C cparse\ncmake . -B build\ncd build &amp;&amp; make\n</code></pre>"},{"location":"commands/assert/","title":"Assert","text":"<ul> <li>parameter: <code>boolean</code>, <code>line</code></li> <li>examples:<ul> <li><code>assert True 2;</code></li> <li><code>assert x &gt; 3 4;</code></li> </ul> </li> <li>Note:<ul> <li><code>boolean</code> will take up to the last word!</li> </ul> </li> </ul>"},{"location":"commands/end/","title":"End","text":"<ul> <li>parameter: none</li> <li>examples:<ul> <li><code>end;</code></li> </ul> </li> </ul>"},{"location":"commands/goto/","title":"Goto","text":"<ul> <li>parameter: <code>line</code></li> <li>examples:<ul> <li><code>goto 3;</code></li> <li><code>goto x+2;</code></li> </ul> </li> <li>Note:<ul> <li><code>line</code> can be an mathematical operation.</li> </ul> </li> </ul>"},{"location":"commands/let/","title":"Let","text":"<ul> <li>parameter: <code>variable</code>, <code>value</code></li> <li>examples:<ul> <li><code>let x 3;</code></li> <li><code>let pi 22/7;</code></li> </ul> </li> <li>Note:<ul> <li><code>value</code> can be an mathematical operation.</li> </ul> </li> </ul>"},{"location":"commands/print/","title":"Print","text":"<ul> <li>parameter: <code>value</code></li> <li>examples:<ul> <li><code>print 3;</code></li> <li><code>print pi;</code></li> <li><code>print 2*pi*3;</code></li> </ul> </li> <li>Note:<ul> <li><code>value</code> can be an mathematical operation.</li> </ul> </li> </ul>"}]}